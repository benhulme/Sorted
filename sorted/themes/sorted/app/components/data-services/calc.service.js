!function(){"use strict";angular.module("sorted").service("calcService",["$http","apiEndpoints",function(a,r){return{save:function(t){var n={method:"POST",url:r.calcSave,data:t,headers:{"Content-Type":"application/json"}};return a(n)},update:function(t,n){var e={method:"PUT",url:r.calcSave+"/"+n,data:t,headers:{"Content-Type":"application/json"}};return a(e)},get:function(t){var n={method:"GET",url:r.calcSave+"/"+t,headers:{"Content-Type":"application/json"}};return a(n)},prepare:function(a){var r={};return angular.forEach(a,function(a,t){var n={};angular.forEach(a.fields,function(a,r){n[r]=a.value}),n.result=a.result,r[t]=n}),r},prepareCollection:function(a){var r=[];return angular.forEach(a.models,function(a){var t=a.attributes;t.result=a.result.attributes,r.push(t)}),r},load:function(a,r){return angular.forEach(a,function(t,n){Array.isArray(r[n].result)||(a[n].result=r[n].result,a[n].ready=!0),angular.forEach(t.fields,function(t,e){r[n]&&r[n][e]&&(a[n].fields[e].value=r[n][e])})}),a},loadCollection:function(a,r){angular.forEach(r,function(r,t){var n=a.get(t);angular.forEach(r,function(a,r){n.$attributes[r]=a})})}}}])}();