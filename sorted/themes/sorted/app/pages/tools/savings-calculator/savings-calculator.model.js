"use strict";angular.module("sorted").factory("SavingsCalculatorModel",["siteConfig","NgBackboneModel","NgBackboneCollection",function(t,e,r){var n=e.extend({hasResult:function(){var t=this,e=["contributions","total","interest"];return!!_.reduce(t.pick(e),function(t,e){return _.isNull(e)?t:_.add(t,parseInt(e))},0)}},{pick:["total","contributions","interest","period","age","total_saved","nudge_age","nudge_interest","nudge_period","nudge_total","nudge_total_saved"]}),s=e.extend({defaults:{saving_freq:52,starting:moment().format(t.DATE_FORMAT),Title:"Savings calculator"},intAttrs:["type","saving_amount","saving_freq","initial_savings","iar"],floatAttrs:["interest_rate","regular_amount","regular_duration_amount","nudge_dollars"],dateAttrs:["starting","ending"],urlRoot:t.API_PREFIX,url:function(){var t=this.urlRoot+"/calculator";return this.isNew()?t:t+"/"+this.get("id")},parse:function(t){var e=this,r={};return _.has(t.result,"result")&&(e.result.set(_.pick(t,"result")),t=_.omit(t,"result")),_.forEach(t,function(t,n){e.intAttrs.indexOf(n)>-1?r[n]=e._toInt(t):e.floatAttrs.indexOf(n)>-1?r[n]=e._toFloat(t):e.dateAttrs.indexOf(n)>-1?r[n]=e._toDate(t):r[n]=t}),r},constructor:function(){this.result=new n,e.apply(this,arguments)},initialize:function(e,r){_.has(r,"calculator")&&(this.calculator=r.calculator),this.on("change",function(e){if(0===e.get("type")&&parseInt(e.get("regular_duration_amount"))>0&&e.has("regular_duration_amount_type")&&e.has("starting")){var r=moment.duration(parseInt(e.get("regular_duration_amount")),e.get("regular_duration_amount_type")),n=moment(e.get("starting"),t.DATE_FORMAT).add(r).format(t.DATE_FORMAT);e.set({ending:n},{silent:!0})}}),this.on("change:ending",function(e,r){var n=/^\d{2}([\/])\d{2}([\/])\d{4}$/;r.length>-1&&!n.test(r)&&this.set({ending:moment(r,t.DATE_FORMAT)},{silent:!0})}),this.listenTo(this.result,"change",function(){this.trigger("result:change",this)})},calculate:function(){var t=this.calculator.calculate(_.clone(this.attributes));return this.result.set(t),this},hasResult:function(){if(0===this.attributes.type){var e;"weeks"===this.attributes.regular_duration_amount_type?e=52:"months"===this.attributes.regular_duration_amount_type?e=12:"years"===this.attributes.regular_duration_amount_type&&(e=1);if(1/e*this.attributes.regular_duration_amount<1/this.attributes.saving_freq)return this.result.attributes.total=0,this.result.attributes.total_saved=0,this.result.attributes.interest=0,this.result.attributes.period=0,!1}else{var r=moment(this.attributes.starting,t.DATE_FORMAT),n=moment(this.attributes.ending,t.DATE_FORMAT);if(moment.duration(n.diff(r)).asDays()<7)return this.result.attributes.total=0,this.result.attributes.total_saved=0,this.result.attributes.interest=0,this.result.attributes.period=0,!1}return this.result.hasResult()},saveResult:function(){var t={success:function(t,e,r){console.info("SUCCESS: ",t,e,r)},error:function(t,e,r){console.error("ERROR: ",t,e,r)}};return this.save(null,t)},loadResult:function(t){this.set("id",t);var e={success:function(t,e,r){console.info("SUCCESS: ",t,e,r)},error:function(t,e,r){console.error("ERROR: ",t,e,r)}};return this.fetch(e)},toJSON:function(){var t=e.prototype.toJSON.apply(this,arguments);return _.merge(t,{result:this.result.toJSON()}),_.merge({Data:t},_.pick(t,"CalcID","Title"))},_toInt:function(t){var e=!1;return _.isEmpty(t)?t:(_.isInteger(t)?e=t:"string"==typeof t&&(t=t.replace("$","").replace(",",""),e=parseInt(t)),_.isNaN(e)?0:e)},_toFloat:function(t,e){var r=!1;return t&&("string"==typeof t&&(t=t.replace("$","").replace(",","")),r=parseFloat(t).toFixed(e)),!(!r||_.isNaN(r))&&r},_toDate:function(e){var r=_.isEmpty(e)?!!_.isNull(e)&&moment():moment(e,t.DATE_FORMAT);return r?r.format(t.DATE_FORMAT):""}}),i=r.extend({model:s,hasResult:function(){return!!this.find(function(t){return t.hasResult()})}});return e.extend({idAttribute:"ID",urlRoot:t.API_PREFIX,defaults:{Title:"My Savings Calculation"},url:function(){var t=this.urlRoot+"/rest/tool";return this.isNew()?t:t+"/"+this.get("ID")},constructor:function(){this.collection=new i,e.apply(this,arguments)},parse:function(t,e){var r=this,n={};return n=_.has(t,"status")&&_.has(t,"data")?t.data:t,_.has(n,"Data")?r.collection.reset(n.Data,e):_.has(n,"models")&&r.collection.reset(n.models,e),_.omit(n,["Data","models"])},hasResult:function(){return this.collection.hasResult()},fetch:function(t){return e.prototype.fetch.apply(this,t)},toJSON:function(){var t=e.prototype.toJSON.apply(this,arguments);return _.merge(t,{Data:this.collection.toJSON()})}})}]);