var SortedCalculator_Net_Worth;!function(t){SortedCalculator_Net_Worth=SortedCalculator.extend({init:function(){this._super()},deduction:function(t){return!!(this.strstr(t,"mortgages")||this.strstr(t,"loan")||this.strstr(t,"hp")||this.strstr(t,"sl")||this.strstr(t,"cc")||this.strstr(t,"other_debt"))},calculate:function(e,i){i===!0&&(console.debug=!0),t.each(e,function(t,i){e[t]=isNaN(parseInt(e[t],10))?0:parseInt(e[t],10)});var s,a={positive:[],negative:[]},o={positive:[],negative:[]},r={positive:[],negative:[]},n=0,v=0,p=0,N=0,l=0,u=0;for(s in e)e.hasOwnProperty(s)&&("10"===s.slice(-2)?this.deduction(s)?r.negative[s]=Number(isNaN(parseInt(e[s],10))?0:e[s]):r.positive[s]=Number(isNaN(parseInt(e[s],10))?0:e[s]):"5"===s.slice(-1)?this.deduction(s)?o.negative[s]=Number(isNaN(parseInt(e[s],10))?0:e[s]):o.positive[s]=Number(isNaN(parseInt(e[s],10))?0:e[s]):this.deduction(s)?a.negative[s]=Number(isNaN(parseInt(e[s],10))?0:e[s]):a.positive[s]=Number(isNaN(parseInt(e[s],10))?0:e[s]));for(s in a.positive)a.positive.hasOwnProperty(s)&&(n+=isNaN(a.positive[s])?0:a.positive[s]);for(s in o.positive)o.positive.hasOwnProperty(s)&&(v+=isNaN(o.positive[s])?0:o.positive[s]);for(s in r.positive)r.positive.hasOwnProperty(s)&&(p+=isNaN(r.positive[s])?0:r.positive[s]);for(s in a.negative)a.negative.hasOwnProperty(s)&&(N+=isNaN(a.negative[s])?0:a.negative[s]);for(s in o.negative)o.negative.hasOwnProperty(s)&&(l+=isNaN(o.negative[s])?0:o.negative[s]);for(s in r.negative)r.negative.hasOwnProperty(s)&&(u+=isNaN(r.negative[s])?0:r.negative[s]);return e.total=n-N,e.total5=v-l,e.total10=p-u,{sum_total:n,sum_total5:v,sum_total10:p,debt_total:N,debt_total5:l,debt_total10:u,total:e.total,total5:e.total5,total10:e.total10}}})}(jQuery);